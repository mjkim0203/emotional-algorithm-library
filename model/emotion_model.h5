import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.callbacks import ModelCheckpoint

# 1) 데이터 준비: FER2013 CSV 파일을 다운받아 CSV→이미지 폴더로 변환해 주세요.
#    예: Kaggle에서 'fer2013.csv' 내려받아, emotion별 하위 폴더에 48×48 grayscale PNG로 정리.

train_dir = "/path/to/fer2013/train"
val_dir   = "/path/to/fer2013/validation"

batch_size = 64
img_size   = (48, 48)

train_gen = ImageDataGenerator(
    rescale=1./255,
    rotation_range=10,
    zoom_range=0.1,
    horizontal_flip=True
).flow_from_directory(
    train_dir,
    target_size=img_size,
    color_mode="grayscale",
    batch_size=batch_size,
    class_mode="categorical"
)

val_gen = ImageDataGenerator(rescale=1./255).flow_from_directory(
    val_dir,
    target_size=img_size,
    color_mode="grayscale",
    batch_size=batch_size,
    class_mode="categorical"
)

# 2) 모델 정의
model = Sequential([
    Conv2D(32, (3,3), activation='relu', input_shape=(*img_size,1)),
    MaxPooling2D(2,2),
    Conv2D(64, (3,3), activation='relu'),
    MaxPooling2D(2,2),
    Conv2D(128, (3,3), activation='relu'),
    MaxPooling2D(2,2),
    Flatten(),
    Dense(128, activation='relu'),
    Dropout(0.5),
    Dense(7, activation='softmax')
])

model.compile(
    optimizer='adam',
    loss='categorical_crossentropy',
    metrics=['accuracy']
)

# 3) 체크포인트 콜백
checkpoint = ModelCheckpoint(
    'emotion_model.h5',
    monitor='val_accuracy',
    save_best_only=True,
    verbose=1
)

# 4) 학습
epochs = 30
model.fit(
    train_gen,
    epochs=epochs,
    validation_data=val_gen,
    callbacks=[checkpoint]
)

# 最終적으로 emotion_model.h5가 생성됩니다.
